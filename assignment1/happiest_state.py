import sys
import json

cities_states = {
    'New York': 'New York',
    'Los Angeles': 'California',
    'Chicago': 'Illinois',
    'Houston': 'Texas',
    'Philadelphia': 'Pennsylvania',
    'Phoenix': 'Arizona',
    'San Antonio': 'Texas',
    'San Diego': 'California',
    'Dallas': 'Texas',
    'San Jose': 'California',
    'Austin': 'Texas',
    'Indianapolis': 'Indiana',
    'Jacksonville': 'Florida',
    'San Francisco': 'California',
    'Columbus': 'Ohio',
    'Charlotte': 'North Carolina',
    'Fort Worth': 'Texas',
    'Detroit': 'Michigan',
    'El Paso': 'Texas',
    'Memphis': 'Tennessee',
    'Seattle': 'Washington',
    'Denver': 'Colorado',
    'Washington': 'District of Columbia',
    'Boston': 'Massachusetts',
    'Nashville': 'Tennessee',
    'Baltimore': 'Maryland',
    'Oklahoma City': 'Oklahoma',
    'Louisville': 'Kentucky',
    'Portland': 'Oregon',
    'Las Vegas': 'Nevada',
    'Milwaukee': 'Wisconsin',
    'Albuquerque': 'New Mexico',
    'Tucson': 'Arizona',
    'Fresno': 'California',
    'Sacramento': 'California',
    'Long Beach': 'California',
    'Kansas City': 'Missouri',
    'Mesa': 'Arizona',
    'Virginia Beach': 'Virginia',
    'Atlanta': 'Georgia',
    'Colorado Springs': 'Colorado',
    'Omaha': 'Nebraska',
    'Raleigh': 'North Carolina',
    'Miami': 'Florida',
    'Oakland': 'California',
    'Minneapolis': 'Minnesota',
    'Tulsa': 'Oklahoma',
    'Cleveland': 'Ohio',
    'Wichita': 'Kansas',
    'Arlington': 'Texas',
    'New Orleans': 'Louisiana',
    'Bakersfield': 'California',
    'Tampa': 'Florida',
    'Honolulu': 'Hawai\'i',
    'Aurora': 'Colorado',
    'Anaheim': 'California',
    'Santa Ana': 'California',
    'St. Louis': 'Missouri',
    'Riverside': 'California',
    'Corpus Christi': 'Texas',
    'Lexington': 'Kentucky',
    'Pittsburgh': 'Pennsylvania',
    'Anchorage': 'Alaska',
    'Stockton': 'California',
    'Cincinnati': 'Ohio',
    'Saint Paul': 'Minnesota',
    'Toledo': 'Ohio',
    'Greensboro': 'North Carolina',
    'Newark': 'New Jersey',
    'Plano': 'Texas',
    'Henderson': 'Nevada',
    'Lincoln': 'Nebraska',
    'Buffalo': 'New York',
    'Jersey City': 'New Jersey',
    'Chula Vista': 'California',
    'Fort Wayne': 'Indiana',
    'Orlando': 'Florida',
    'St. Petersburg': 'Florida',
    'Chandler': 'Arizona',
    'Laredo': 'Texas',
    'Norfolk': 'Virginia',
    'Durham': 'North Carolina',
    'Madison': 'Wisconsin',
    'Lubbock': 'Texas',
    'Irvine': 'California',
    'Winston-Salem': 'North Carolina',
    'Glendale': 'Arizona',
    'Garland': 'Texas',
    'Hialeah': 'Florida',
    'Reno': 'Nevada',
    'Chesapeake': 'Virginia',
    'Gilbert': 'Arizona',
    'Baton Rouge': 'Louisiana',
    'Irving': 'Texas',
    'Scottsdale': 'Arizona',
    'North Las Vegas': 'Nevada',
    'Fremont': 'California',
    'Boise': 'Idaho',
    'Richmond': 'Virginia',
    'San Bernardino': 'California',
    'Birmingham': 'Alabama',
    'Spokane': 'Washington',
    'Rochester': 'New York',
    'Des Moines': 'Iowa',
    'Modesto': 'California',
    'Fayetteville': 'North Carolina',
    'Tacoma': 'Washington',
    'Oxnard': 'California',
    'Fontana': 'California',
    'Columbus': 'Georgia',
    'Montgomery': 'Alabama',
    'Moreno Valley': 'California',
    'Shreveport': 'Louisiana',
    'Aurora': 'Illinois',
    'Yonkers': 'New York',
    'Akron': 'Ohio',
    'Huntington Beach': 'California',
    'Little Rock': 'Arkansas',
    'Augusta': 'Georgia',
    'Amarillo': 'Texas',
    'Glendale': 'California',
    'Mobile': 'Alabama',
    'Grand Rapids': 'Michigan',
    'Salt Lake City': 'Utah',
    'Tallahassee': 'Florida',
    'Huntsville': 'Alabama',
    'Grand Prairie': 'Texas',
    'Knoxville': 'Tennessee',
    'Worcester': 'Massachusetts',
    'Newport News': 'Virginia',
    'Brownsville': 'Texas',
    'Overland Park': 'Kansas',
    'Santa Clarita': 'California',
    'Providence': 'Rhode Island',
    'Garden Grove': 'California',
    'Chattanooga': 'Tennessee',
    'Oceanside': 'California',
    'Jackson': 'Mississippi',
    'Fort Lauderdale': 'Florida',
    'Santa Rosa': 'California',
    'Rancho Cucamonga': 'California',
    'Port St. Lucie': 'Florida',
    'Tempe': 'Arizona',
    'Ontario': 'California',
    'Vancouver': 'Washington',
    'Cape Coral': 'Florida',
    'Sioux Falls': 'South Dakota',
    'Springfield': 'Missouri',
    'Peoria': 'Arizona',
    'Pembroke Pines': 'Florida',
    'Elk Grove': 'California',
    'Salem': 'Oregon',
    'Lancaster': 'California',
    'Corona': 'California',
    'Eugene': 'Oregon',
    'Palmdale': 'California',
    'Salinas': 'California',
    'Springfield': 'Massachusetts',
    'Pasadena': 'Texas',
    'Fort Collins': 'Colorado',
    'Hayward': 'California',
    'Pomona': 'California',
    'Cary': 'North Carolina',
    'Rockford': 'Illinois',
    'Alexandria': 'Virginia',
    'Escondido': 'California',
    'McKinney': 'Texas',
    'Kansas City': 'Kansas',
    'Joliet': 'Illinois',
    'Sunnyvale': 'California',
    'Torrance': 'California',
    'Bridgeport': 'Connecticut',
    'Lakewood': 'Colorado',
    'Hollywood': 'Florida',
    'Paterson': 'New Jersey',
    'Naperville': 'Illinois',
    'Syracuse': 'New York',
    'Mesquite': 'Texas',
    'Dayton': 'Ohio',
    'Savannah': 'Georgia',
    'Clarksville': 'Tennessee',
    'Orange': 'California',
    'Pasadena': 'California',
    'Fullerton': 'California',
    'Killeen': 'Texas',
    'Frisco': 'Texas',
    'Hampton': 'Virginia',
    'McAllen': 'Texas',
    'Warren': 'Michigan',
    'Bellevue': 'Washington',
    'West Valley City': 'Utah',
    'Columbia': 'South Carolina',
    'Olathe': 'Kansas',
    'Sterling Heights': 'Michigan',
    'New Haven': 'Connecticut',
    'Miramar': 'Florida',
    'Waco': 'Texas',
    'Thousand Oaks': 'California',
    'Cedar Rapids': 'Iowa',
    'Charleston': 'South Carolina',
    'Visalia': 'California',
    'Topeka': 'Kansas',
    'Elizabeth': 'New Jersey',
    'Gainesville': 'Florida',
    'Thornton': 'Colorado',
    'Roseville': 'California',
    'Carrollton': 'Texas',
    'Coral Springs': 'Florida',
    'Stamford': 'Connecticut',
    'Simi Valley': 'California',
    'Concord': 'California',
    'Hartford': 'Connecticut',
    'Kent': 'Washington',
    'Lafayette': 'Louisiana',
    'Midland': 'Texas',
    'Surprise': 'Arizona',
    'Denton': 'Texas',
    'Victorville': 'California',
    'Evansville': 'Indiana',
    'Santa Clara': 'California',
    'Abilene': 'Texas',
    'Athens': 'Georgia',
    'Vallejo': 'California',
    'Allentown': 'Pennsylvania',
    'Norman': 'Oklahoma',
    'Beaumont': 'Texas',
    'Independence': 'Missouri',
    'Murfreesboro': 'Tennessee',
    'Ann Arbor': 'Michigan',
    'Springfield': 'Illinois',
    'Berkeley': 'California',
    'Peoria': 'Illinois',
    'Provo': 'Utah',
    'El Monte': 'California',
    'Columbia': 'Missouri',
    'Lansing': 'Michigan',
    'Fargo': 'North Dakota',
    'Downey': 'California',
    'Costa Mesa': 'California',
    'Wilmington': 'North Carolina',
    'Arvada': 'Colorado',
    'Inglewood': 'California',
    'Miami Gardens': 'Florida',
    'Carlsbad': 'California',
    'Westminster': 'Colorado',
    'Rochester': 'Minnesota',
    'Odessa': 'Texas',
    'Manchester': 'New Hampshire',
    'Elgin': 'Illinois',
    'West Jordan': 'Utah',
    'Round Rock': 'Texas',
    'Clearwater': 'Florida',
    'Waterbury': 'Connecticut',
    'Gresham': 'Oregon',
    'Fairfield': 'California',
    'Billings': 'Montana',
    'Lowell': 'Massachusetts',
    'Ventura': 'California',
    'Pueblo': 'Colorado',
    'High Point': 'North Carolina',
    'West Covina': 'California',
    'Richmond': 'California',
    'Murrieta': 'California',
    'Cambridge': 'Massachusetts',
    'Antioch': 'California',
    'Temecula': 'California',
    'Norwalk': 'California',
    'Centennial': 'Colorado',
    'Everett': 'Washington',
    'Palm Bay': 'Florida',
    'Wichita Falls': 'Texas',
    'Green Bay': 'Wisconsin',
    'Daly City': 'California',
    'Burbank': 'California',
    'Richardson': 'Texas',
    'Pompano Beach': 'Florida',
    'North Charleston': 'South Carolina',
    'Broken Arrow': 'Oklahoma',
    'Boulder': 'Colorado',
    'West Palm Beach': 'Florida',
    'Santa Maria': 'California',
    'El Cajon': 'California',
    'Davenport': 'Iowa',
    'Rialto': 'California',
    'Las Cruces': 'New Mexico',
    'San Mateo': 'California',
    'Lewisville': 'Texas',
    'South Bend': 'Indiana',
    'Lakeland': 'Florida',
    'Erie': 'Pennsylvania',
    'Tyler': 'Texas',
    'Pearland': 'Texas',
    'College Station': 'Texas'
}

statesCodes = ['AK','AL','AR','AS','AZ','CA','CO','CT','DC','DE','FL','GA','GU','HI','IA','ID','IL','IN','KS','KY','LA','MA','MD','ME','MI','MN','MO','MP','MS','MT','NA','NC','ND','NE','NH','NJ','NM','NV','NY','OH','OK','OR','PA','PR','RI','SC','SD','TN','TX','UT','VA','VI','VT','WA','WI','WV','WY']

stateNames = ['Alaska', 'Alabama', 'Arkansas', 'American Samoa', 'Arizona', 'California', 'Colorado', 'Connecticut', 'District of Columbia', 'Delaware', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Iowa', 'Idaho', 'Illinois', 'Indiana', 'Kansas', 'Kentucky', 'Louisiana', 'Massachusetts', 'Maryland', 'Maine', 'Michigan', 'Minnesota', 'Missouri', 'Northern Mariana Islands', 'Mississippi', 'Montana', 'National', 'North Carolina', 'North Dakota', 'Nebraska', 'New Hampshire', 'New Jersey', 'New Mexico', 'Nevada', 'New York', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Virginia', 'Virgin Islands', 'Vermont', 'Washington', 'Wisconsin', 'West Virginia', 'Wyoming']
states = {
 'Alaska':'AK',
'Alabama':'AL',
'Arkansas':'AR',
'American Samoa':'AS',
'Arizona':'AZ',
'California':'CA',
'Colorado':'CO',
'Connecticut':'CT',
'District of Columbia':'DC',
'Delaware':'DE',
'Florida':'FL',
'Georgia':'GA',
'Guam':'GU',
'Hawaii':'HI',
'Iowa':'IA',
'Idaho':'ID',
'Illinois':'IL',
'Indiana':'IN',
'Kansas':'KS',
'Kentucky':'KY',
'Louisiana':'LA',
'Massachusetts':'MA',
'Maryland':'MD',
'Maine':'ME',
'Michigan':'MI',
'Minnesota':'MN',
'Missouri':'MO',
'Northern Mariana Islands':'MP',
'Mississippi':'MS',
'Montana':'MT',
'National':'NA',
'North Carolina':'NC',
'North Dakota':'ND',
'Nebraska':'NE',
'New Hampshire':'NH',
'New Jersey':'NJ',
'New Mexico':'NM',
'Nevada':'NV',
'New York':'NY',
'Ohio':'OH',
'Oklahoma':'OK',
'Oregon':'OR',
'Pennsylvania':'PA',
'Puerto Rico':'PR',
'Rhode Island':'RI',
'South Carolina':'SC',
'South Dakota':'SD',
'Tennessee':'TN',
'Texas':'TX',
'Utah':'UT',
'Virginia':'VA',
'Virgin Islands':'VI',
'Vermont':'VT',
'Washington':'WA',
'Wisconsin':'WI',
'West Virginia':'WV',
'Wyoming':'WY'
}

def sentiment(tweet, scores):
    score = 0
    for word in tweet.split():
        if word in scores:
           score = score + scores[word]   
    if score > 0:
       return score
    else:
       return -1 

def stateCode(place):
    state = None
    if place['country_code'] is not None:
       if place['country_code'] == 'USA' or place['country_code']  == 'US' or place['country_code'] == 'United States':
            if stateNames.count(place['name']) > 0:
               state = states[str(place['name']).encode('utf-8')] 
            elif statesCodes.count(place['name']) > 0:
               state = place['name']
            elif place['full_name'] is not None:
               fullNameSplit = place['full_name'].split(',')
               for name in fullNameSplit:
                    if stateNames.count(place['name']) > 0:
                       state = states[str(place['name']).encode('utf-8')] 
                    elif statesCodes.count(place['name']) > 0:
                       state = place['name']      
    return state
    

def main():
    sent_file = open(sys.argv[1])
    tweet_file = open(sys.argv[2])

     
    stateScores = {} 
    scores = {} # initialize an empty dictionary
    for line in sent_file:
        term, score  = line.split("\t")  # The file is tab-delimited. "\t" means "tab character"
        scores[term] = int(score) # Convert the score to an integer.

    for tweet in tweet_file:
        pytweet = json.loads(tweet) 
        if 'text' in pytweet:
            sent = sentiment(pytweet['text'],scores)
            if 'place' in pytweet and pytweet['place'] is not None:
                state = stateCode(pytweet['place'])
                if state is not None:
                    if state in stateScores:
                       stateScores[state] =  [stateScores[state][0] + sent,stateScores[state][1] + 1]
                    else:
                       stateScores[state] = [sent, 1]    
  
    maxScore = 0.0
    happiestState = ""

    for state,score_stateCount in  stateScores.iteritems():
        score = float(score_stateCount[0]/score_stateCount[1])
        if score > maxScore:
           happiestState = state
           maxScore = score
           
    print happiestState.encode('utf-8')  


if __name__ == '__main__':
    main()
